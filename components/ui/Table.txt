'use client'

import * as React from "react"

function cn(...inputs: any[]) {
  return inputs.filter(Boolean).join(" ")
}

const data = [
  {
    uid: "d328e111-b0f9-487f-9194-3...",
    schema: "#1",
    schemaDesc: "User → Agent Attestation",
    from: "did:peer:21t6HKXN4UXVtdd...",
    to: "did:peer:21t6HKXN4UXVtdd...",
    time: "1 min ago",
  },
  {
    uid: "d328e111-b0f9-487f-9194-3...",
    schema: "#2",
    schemaDesc: "User → Agent Attestation",
    from: "did:peer:21t6HKXN4UXVtdd...",
    to: "did:peer:21t6HKXN4UXVtdd...",
    time: "7 min ago",
  },
  {
    uid: "d328e111-b0f9-487f-9194-3...",
    schema: "#3",
    schemaDesc: "User → Agent Attestation",
    from: "did:peer:21t6HKXN4UXVtdd...",
    to: "did:peer:21t6HKXN4UXVtdd...",
    time: "12 hours ago",
  },
  {
    uid: "d328e111-b0f9-487f-9194-3...",
    schema: "#4",
    schemaDesc: "User → Agent Attestation",
    from: "did:peer:21t6HKXN4UXVtdd...",
    to: "did:peer:21t6HKXN4UXVtdd...",
    time: "12 hours ago",
  },
  {
    uid: "d328e111-b0f9-487f-9194-3...",
    schema: "#5",
    schemaDesc: "User → Agent Attestation",
    from: "did:peer:21t6HKXN4UXVtdd...",
    to: "did:peer:21t6HKXN4UXVtdd...",
    time: "12 hours ago",
  },
  {
    uid: "d328e111-b0f9-487f-9194-3...",
    schema: "#6",
    schemaDesc: "User → Agent Attestation",
    from: "did:peer:21t6HKXN4UXVtdd...",
    to: "did:peer:21t6HKXN4UXVtdd...",
    time: "12 hours ago",
  },
]

export default function SecondPage() {
  return (
    <div className="min-h-screen bg-blue-50 p-8">
      <div className="bg-blue-100 p-6 rounded-xl shadow max-w-6xl mx-auto space-y-6">
        <h2 className="text-2xl font-bold text-blue-900">Attestations History</h2>
        
        <div className="overflow-x-auto rounded-xl">
          <table className="min-w-full bg-white rounded-xl">
            <thead className="bg-blue-50 text-left text-sm text-gray-600">
              <tr>
                <th className="py-3 px-4">UID</th>
                <th className="py-3 px-4">Schema</th>
                <th className="py-3 px-4">From</th>
                <th className="py-3 px-4">To</th>
                <th className="py-3 px-4">Time</th>
              </tr>
            </thead>
            <tbody className="text-sm text-gray-800">
              {data.map((item, index) => (
                <tr key={index} className="border-t border-gray-200 hover:bg-gray-50">
                  <td className="py-3 px-4">{item.uid}</td>
                  <td className="py-3 px-4">
                    <div className="flex items-center space-x-2">
                      <span className="text-white bg-cyan-500 px-2 py-0.5 rounded text-xs font-semibold">{item.schema}</span>
                      <span className="text-xs text-gray-600 bg-yellow-50 px-2 py-0.5 rounded">{item.schemaDesc}</span>
                    </div>
                  </td>
                  <td className="py-3 px-4">{item.from}</td>
                  <td className="py-3 px-4">{item.to}</td>
                  <td className="py-3 px-4">{item.time}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>

        {/* Pagination */}
        <div className="flex items-center justify-between text-sm text-gray-600 pt-4">
          <button className="text-blue-700 hover:underline" disabled>← Previous</button>
          <div className="flex space-x-2">
            <span className="w-8 h-8 rounded bg-white shadow text-center leading-8">1</span>
            <span className="w-8 h-8 text-center leading-8">2</span>
            <span className="w-8 h-8 text-center leading-8">3</span>
            <span className="w-8 h-8 text-center leading-8">…</span>
            <span className="w-8 h-8 text-center leading-8">10</span>
          </div>
          <button className="text-blue-700 hover:underline">Next →</button>
        </div>
      </div>
    </div>
  )
}

